<?php
if(!defined('WPINC')){	die; }

if(!class_exists('THWPSB_Db_Custom_Table')):

class THWPSB_Db_Custom_Table {

    //protected $table_name = '';

  	public function __construct(){
        //$this->table_name = $table_name;
  	}

    private static function _table() {
		global $wpdb;
		$tablename = static::$table_name;
		return $wpdb->base_prefix . $tablename;
	}

    private static function _fetch_sql( $value ) {
		global $wpdb;
		$sql = sprintf( 'SELECT * FROM %s WHERE %s = %%s', self::_table(), static::$primary_key );
		return $wpdb->prepare( $sql, $value );
	}

    static function prepare_sql_where($data, $operator = 'AND'){
        $sql_where       = '';
		$sql_where_count = count( $data );
		$i               = 1;
		foreach ( $data as $key => $row ) {
			if ( $i < $sql_where_count ) {
				$sql_where .= "`$key` = '$row' $operator ";
			} else {
				$sql_where .= "`$key` = '$row'";
			}
			$i++;
		}
        return $sql_where;
    }

    static function prepare_sql_where_2($data, $combine_operator = 'AND'){
        $sql_where       = '';
		$sql_where_count = count( $data );
		$i               = 1;
		foreach ( $data as $key => $row ) {
            $value = isset($row['value'])? $row['value'] : '';
            $operator = isset($row['operator'])? $row['operator'] : '=';
            if($value){
                if ( $i < $sql_where_count ) {
    				$sql_where .= "`$key` $operator '$value' $combine_operator ";
    			} else {
    				$sql_where .= "`$key` $operator '$value'";
    			}
            }else{
                if ( $i < $sql_where_count ) {
    				$sql_where .= "`$key` $operator $combine_operator ";
    			} else {
    				$sql_where .= "`$key` $operator ";
    			}
            }

			$i++;
		}
        return $sql_where;
    }

    static function valid_check( $data ) {
		global $wpdb;

		$sql_where       = '';
		$sql_where_count = count( $data );
		$i               = 1;
		foreach ( $data as $key => $row ) {
			if ( $i < $sql_where_count ) {
				$sql_where .= "`$key` = '$row' and ";
			} else {
				$sql_where .= "`$key` = '$row'";
			}
			$i++;
		}
		$sql     = 'SELECT * FROM ' . self::_table() . " WHERE $sql_where";
		$results = $wpdb->get_results( $sql );
		if ( count( $results ) != 0 ) {
			return false;
		} else {
			return true;
		}
	}

	static function get( $value ) {
		global $wpdb;
		return $wpdb->get_row( self::_fetch_sql( $value ) );
	}

	static function insert( $data ) {
		global $wpdb;
		$wpdb->insert( self::_table(), $data );
	}

	static function update( $data, $where ) {
		global $wpdb;
		$wpdb->update( self::_table(), $data, $where );
	}

	static function delete( $value ) {
		global $wpdb;
		$sql = sprintf( 'DELETE FROM %s WHERE %s = %%s', self::_table(), static::$primary_key );
		return $wpdb->query( $wpdb->prepare( $sql, $value ) );
	}

    // static function fetch( $sql_where_data = false, $per_page = false, $page_number = false, $order_by = false, $order = false  ) {
	// 	global $wpdb;
    //
    //     $sql = 'SELECT * FROM ' . self::_table();
    //     if($sql_where_data){
    //         $sql_where = self::prepare_sql_where($sql_where_data);
    //         $sql .= " WHERE $sql_where";
    //     }
    //
    //     if ($order_by) {
    //         $sql .= ' ORDER BY ' . esc_sql( $order_by );
    //         $sql .= ! empty( $order ) ? ' ' . esc_sql( $order ) : ' DESC';
    //     }
    //
    //     if ($per_page) {
    //         $sql .= " LIMIT $per_page";
    //     }
    //
    //     if ($page_number) {
    //         $sql .= ' OFFSET ' . ( $page_number - 1 ) * $per_page;
    //     }
    //
    //     #$sql_where = self::prepare_sql_where($data);
	// 	#$sql   = 'SELECT * FROM ' . self::_table() . " WHERE $sql_where order by `created_at` DESC";
    //
    //     return $wpdb->get_results( $sql );
	// }


    static function fetch( $sql_where_data = false, $per_page = false, $page_number = false, $order_by = false, $order = false  ) {
		global $wpdb;

        $sql = 'SELECT * FROM ' . self::_table();
        if($sql_where_data){
            $sql_where = self::prepare_sql_where_2($sql_where_data);
            $sql .= " WHERE $sql_where";
        }

        if ($order_by) {
            $sql .= ' ORDER BY ' . esc_sql( $order_by );
            $sql .= ! empty( $order ) ? ' ' . esc_sql( $order ) : ' DESC';
        }

        if ($per_page) {
            $sql .= " LIMIT $per_page";
        }

        if ($page_number) {
            $sql .= ' OFFSET ' . ( $page_number - 1 ) * $per_page;
        }

        #$sql_where = self::prepare_sql_where($data);
		#$sql   = 'SELECT * FROM ' . self::_table() . " WHERE $sql_where order by `created_at` DESC";

        return $wpdb->get_results( $sql );
	}

    /**
     * Returns the count of records in the database.
     *
     * @return null|string
     */
    public static function record_count() {
      global $wpdb;

      $sql = "SELECT COUNT(*) FROM " . self::_table();

      return $wpdb->get_var( $sql );
    }

}

endif;
